name: Build and upload python packages

on:
  create:
    tags:
      - v*
  push:
    branches:
      - master

jobs:
  release-pypi:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-16.04', 'macos-10.15']

    steps:
    - uses: actions/checkout@v2

    - name: Download and install miniconda
      run: |
        if [[ "${{ matrix.os }}" = "ubuntu-16.04" ]]; then
          MINICONDA_FILENAME=Miniconda3-latest-Linux-x86_64.sh
        elif [[ "${{ matrix.os }}" = "macos-10.15" ]]; then
          MINICONDA_FILENAME=Miniconda3-latest-MacOSX-x86_64.sh
        fi
        curl -L -o $MINICONDA_FILENAME "https://repo.continuum.io/miniconda/$MINICONDA_FILENAME"
        bash ${MINICONDA_FILENAME} -b -f -p $HOME/miniconda3
        conda init

    # - name: Init conda environment (Linux)
    #   if: matrix.os == 'ubuntu-16.04'
    #   run: conda init

    - name: Download and build dependencies
      run: |
        conda create -n meson python=3.8
        conda activate meson
        conda install -y meson
        make download-build-static-deps
        conda deactivate
      env:
        CC: clang
        CXX: clang++

    - name: Build packages
      run: |
        if [ ${{matrix.os}} == 'ubuntu-20.04' ]; then
          EXTRA_BDIST_ARGS="--plat-name manylinux1_x86_64"
        fi
        for VERSION in 3.6; do
          conda create -n py$VERSION python=$VERSION
          conda activate py$VERSION
          python setup.py build_ext bdist_wheel $EXTRA_BDIST_ARGS
          conda deactivate
        done
      env:
        CC: clang
        CXX: clang++

    # - name: Upload packages
    #   run: |
    #     python -m pip install setuptools wheel twine
    #     python -m twine upload dist/*
    #   env:
    #     TWINE_USERNAME: __token__
    #     TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
