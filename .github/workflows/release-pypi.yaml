name: Build and upload python packages

on:
  create:
    tags:
      - v*

jobs:
  release-pypi:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-16.04', 'macos-10.15']

    steps:
    - uses: actions/checkout@v2

    - name: Download and install miniconda (OSX)
      if: matrix.os == 'macos-10.15'
      shell: bash
      run: |
        MINICONDA_FILENAME=Miniconda3-latest-MacOSX-x86_64.sh
        curl -L -o $MINICONDA_FILENAME "https://repo.continuum.io/miniconda/$MINICONDA_FILENAME"
        bash ${MINICONDA_FILENAME} -b -f -p $HOME/miniconda3
        echo "::add-path::$HOME/miniconda3/bin"
        echo "::add-path::$HOME/miniconda3/Scripts"
        conda init

    - name: Download and build dependencies
      run: |
        eval "$(conda shell.bash hook)"
        conda create -n meson python=3.8
        conda activate meson
        conda install -y meson
        make download-build-static-deps
        conda deactivate
      env:
        CC: clang
        CXX: clang++

    - name: Build and upload packages
      run: |
        eval "$(conda shell.bash hook)"
        if [ "${{matrix.os}}" == "ubuntu-16.04" ]; then
          EXTRA_BDIST_ARGS="--plat-name manylinux1_x86_64"
        fi
        for VERSION in 3.6 3.7 3.8; do
          conda create -n py$VERSION python=$VERSION
          conda activate py$VERSION
          python setup.py build_ext bdist_wheel $EXTRA_BDIST_ARGS
          conda deactivate
        done
        conda activate py3.8
        python -m pip install setuptools wheel twine
        python -m twine upload dist/*
      env:
        CC: clang
        CXX: clang++
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
